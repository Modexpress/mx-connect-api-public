<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2020 (x64) (http://www.altova.com) by Bruno Chaves (Modexpress B.V.) -->
<!--  $Revision: 231219 $
$Date: 2023-12-19 13:00:00 +0200$
 -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="https://raw.githubusercontent.com/Modexpress/mx-connect-api-public/main/XML-schema-definitions/4.0/fashion_shp_4.0.xsd" targetNamespace="https://raw.githubusercontent.com/Modexpress/mx-connect-api-public/main/XML-schema-definitions/4.0/fashion_shp_4.0.xsd" elementFormDefault="qualified">
	<xs:include schemaLocation="simple_types_4.0.xsd"/>
	<!-- 
|| Some general simple-type definitions
 -->
	<xs:simpleType name="FinInfoType">
		<xs:restriction base="xs:normalizedString">
			<xs:maxLength value="15"/>
			<xs:enumeration value="Invoice"/>
			<xs:enumeration value="CodSurcharge"/>
			<xs:enumeration value="Discount"/>
			<xs:enumeration value="Handling"/>
			<xs:enumeration value="Packaging"/>
			<xs:enumeration value="Transport"/>
			<xs:enumeration value="PayedAmount"/>
			<xs:enumeration value="Taxes"/>
			<xs:enumeration value="Duties"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- 
|| Below the message-structure
 -->
	<xs:element name="Message">
		<xs:annotation>
			<xs:documentation>The message to register an order to deliver goods to an address/recipient. This can involve both b2b and b2c orders.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Header" type="tns:Header">
					<xs:annotation>
						<xs:documentation>The message header</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="OrderingParty" type="tns:Relation">
					<xs:annotation>
						<xs:documentation>The party on whose behalf the goods in the order have to be delivered.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="Orders" type="tns:Orders">
					<xs:annotation>
						<xs:documentation>The orders to deliver goods on behalf of the ordering party.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="Header">
		<xs:sequence>
			<xs:element name="Version" type="tns:Text10">
				<xs:annotation>
					<xs:documentation>Identification of the message version used.
Allowed values: 3,0, 4.0</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Identification" type="tns:Text20">
				<xs:annotation>
					<xs:documentation>Identification of the message.
The id must be unique among all the shipment messages submitted by the sender.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ConfirmationOfReceipt" type="tns:Indication01">
				<xs:annotation>
					<xs:documentation>Indication whether a confirmation of receipt is desired for the message:
- 0 = no
- 1 = yes</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Sender" type="tns:RelationInt">
				<xs:annotation>
					<xs:documentation>The party that submits the SHP message.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Orders">
		<xs:sequence>
			<xs:element name="Order" type="tns:Order" maxOccurs="100">
				<xs:annotation>
					<xs:documentation>An order to deliver goods (stock).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Order">
		<xs:sequence>
			<xs:element name="Id" type="tns:Text40">
				<xs:annotation>
					<xs:documentation>The identification that the ordering party uses for the order. On the basis of this identification Modexpress checks whether this order already exists for the ordering party (in Modexpress ERP/WMS). Cancelled orders are not taken into consideration. If an order already exists there are two options:
- the new order is rejected without question, or
- an attempt is made to cancel the existing order, if this is possible the new order is processed, otherwise the new order is rejected.
The option to use must be configured.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DateTime" type="tns:DateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date that the ordering party uses for the order. For example, this can be the date on which the order was placed by the ordering party. This date is indicated as the order date on the packing slip.
The following formats are accepted:
o YYYY-MM-DDTHH24:MI:SS, e.g. '2018-03-02T08:21:37'
o DD-MM-RRRR HH24:MI:SS, e.g. '02-03-2018 10:51:01'
o DD-MM-RRRR HH24:MI, e.g. '02-03-2018 10:51'
o DDMMRRRR, e.g. '02032018'
o YYYY-MM-DD, e.g. '2018-03-02'
o YYYY-MM-DDZ, e.g. '2018-03-02Z'
Note that only the date-part is used by Modexpress (not the time-part)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Type" type="tns:OrderType">
				<xs:annotation>
					<xs:documentation>Designation of the order type.
Only the types indicated by Modexpress are permitted:
- LB2BF - delivery B2B Fashion
- LB2CF - delivery B2C Fashion</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DeliveryTime" type="tns:DeliveryTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Designation of the period in which the order must be executed:
- D - Day (24H); send off to carrier within 1 working day, however, this will be overruled by a specified date (see attribute FirstDeliveryDate)
- H - Pack&amp;Hold; packaging within 1 or 2 working days, send off to carrier on specified date (see attribute FirstDeliveryDate)
If no delivery time is indicated, 'D' is the default. 
For delivery times 'D' and ‘N’, the order must be received before the agreed cut-off time (on a working day) so that it can be send off to the carrier on time. Orders received after the cut-off time will be produced and send off to the carrier one working day later.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OrderReference" type="tns:OText25" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference for the order used by the ordering party.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ClientReference" type="tns:OText35" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference used by the buyer/recipient for the order.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShipmentCode" type="tns:OText5" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Designation of the desired transport for the order.
A customer can agree to a default means of transport. This means of transport will then be used if no means of transport has been specified. If a means of transport has indeed been specified, it overrules the default means of transport.
Possible values:

CBFC - Modexpress Self Collector
CBFF - Modexpress Standard (Modexpress arranges transport)
CBFR - Modexpress Reservation order with storage (Pack &amp; Hold / postponement of shipment for a (non-) specific longer time)
CBFS - Modexpress Special customer with buffering on shipping floor (postponement of shipment for a short time)
CBFX - Modexpress pre-advise customers (Modexpress will contact the recipient)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShipmentService" type="tns:OText20" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A non-standard service level to be used for transport (instead of the standard agreed transport) – for example, insured transport or transport with delivery instructions.
The services/products are carrier-dependent. A choice can be made from the options offered by the carrier.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReturnShipmentCode" type="tns:OText5" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Designation of the desired return transport for the order.
Relevant in case the delivery has to contain a return label.
</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReturnShipmentService" type="tns:OText20" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A non-standard service level to be used for return transport (instead of the standard agreed transport).
Relevant in case the delivery has to contain a return label.
</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FirstDeliveryDate" type="tns:Date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The date on which the goods must be hand over to the carrier.
This attribute is intended for use in combination with attribute DeliveryTime is 'H' (Pack&amp;Hold). In case of DeliveryTime is 'D' (Day) the FirstDeliveryDate can also be used and overrules this DeliveryTime.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LastDeliveryDate" type="tns:Date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The last/latest desired date on which the recipient wants the goods to be delivered in case of an order with delivery time 'L' (not yet implemented)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SubType" type="tns:OText10" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Further subdivision of the type of the order. For example:
- PRE-ORDER and RE-ORDER can be relevant for orders of type LB2BF
- WEB-ORDER can be relevant for orders of type LB2CF</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PartialDelivery" type="tns:PartialDelivery">
				<xs:annotation>
					<xs:documentation>- ONDELIVERYDATE; the order may not be delivered in parts, but incomplete delivery is permitted. The reference moment for this is the order release for the delivery date. The order is then cancelled for the part not to be delivered and will only be executed for the part to be delivered.
- NEVER; the order may not be delivered in parts and incomplete delivery is not permitted. The reference moment for this is the order release for the delivery date. The entire order is cancelled if the full order cannot be delivered in one delivery.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Explanation" type="tns:OText255" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Explanation for the order.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Priority" type="tns:ONum2" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Priority of the order.
Can be used to make a distinction in the priority of orders (priority 1 is higher than priority 2, etc.).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IncoTerm" type="tns:Incoterm" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A pre-defined commercial term published by the International Chamber of Commerce (ICC) relating to international commercial law. The Incoterms rules are intended primarily to clearly communicate the tasks, costs, and risks associated with the transportation and delivery of goods.

EXW - Ex Works
FCA - Free Carrier
FAS - Free Alongside Ship
FOB - Free on Board
CPT - Carriage Paid To
CIP - Carriage and Insurance Paid To
CFR - Cost and Freight
CIF - Cost Insurance and Freight
DAP - Delivered At Place
DPU - Delivered at Place Unloaded
DDP - Delivered Duty Paid</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IncoTermPlace" type="tns:OText50" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The agreed place of delivery/destination.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IncoTermCountry" type="tns:OText3" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The destination country</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReturnPeriod" type="tns:ONum3" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The validity period (number of days) that has to be used for the automatic generated return order. If no return period is indicated, the default applies.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BondedCustomsHandling" type="tns:BondedCustomsHandlingType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This can be used to override the standard logic for customs handling. 
FC_GOODS_ONLY - This can be used on export shipments and it ensures that if bonded goods are present they first have to be cleared into the EU before being exported. (for instance in case of an export to Turkey).
EU_BW_TO_BW - This can be used for intercompany sales of bonded goods within the EU.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdditionalFinInfo" type="tns:AdditionalFinInfo" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Additional financial info that applies to the order.
This info is mainly needed in case of customs declaration.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Parties" type="tns:Parties">
				<xs:annotation>
					<xs:documentation>The parties/addresses that apply to the order.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Instructions" type="tns:Instructions" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The instructions that apply to the order (for example VAS; Value Added Services).
This can involve packing instructions, the control of VAS or texts to be printed on the shipment documents.
An instruction is indicated by either a code or description.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OrderLines" type="tns:OrderLines">
				<xs:annotation>
					<xs:documentation>The lines of the order</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AdditionalFinInfo">
		<xs:sequence>
			<xs:element name="FinInfo" type="tns:FinInfo" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Financial information of a particular type.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FinInfo">
		<xs:sequence>
			<xs:element name="InfoType" type="tns:FinInfoType" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Indication of the type of financial information:
 - Type 'Invoice' is used for customs declaration
 - Type 'CodSurcharge' is used to indicate a Cash On Delivery surcharge (Amount and CurrencyCode must be indicated)
 - Type 'Discount', 'Handling', 'Packaging', 'Transport' and 'PayedAmount' is used for the packing slip of the e-commerce platform Zalando (Amount, CurrencyCode, VATCode and VATPercentage must be indicated)
- Type 'Duties' and 'Taxes' is used for carriers that need it and support it.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Description" type="tns:OText50" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A relevant description for the type of financial information.
In case of 'Invoice', this concerns the invoice number.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Date" type="tns:Date" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>A relevant date for the type of financial information.
In case of 'Invoice', this concerns the invoice date.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Amount" type="tns:Num9.2" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The amount that applies to the type of financial information (so the invoice amount).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrencyCode" type="tns:OText3" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Code indicating the currency in which the amount is expressed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VATCode" type="tns:VATCode" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Code that indicates whether the amount is including (I) or excluding (E) VAT.
For customs usage the amount is exclusive of VAT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VATPercentage" type="tns:Num5.2" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The VAT percentage that applies to the amount.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Parties">
		<xs:sequence>
			<xs:element name="Party" type="tns:Party" maxOccurs="4">
				<xs:annotation>
					<xs:documentation>A party/address that applies to the order.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Party">
		<xs:sequence>
			<xs:element name="Type" type="tns:PartyType">
				<xs:annotation>
					<xs:documentation>A type of party/address that applies to the order:
- ReceiverAddress; receiver/recipient/consignee address
- SellerAddress; Seller/Shipper address
- BuyerAddress; buyer address
- InvoiceAddress; invoice address
- DropSiteAddress; drop site address / pick up point address
- ImporterOfRecord; This is the party that will pay the import duties in the country of destination. 
    In the case of DHL, can also be the party to whom the duties are charged.
    Note: In case MXCustomer has an entity in the destination country, it will usually act as IoR for tax purposes.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Id" type="tns:ONum7" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The party that must be regarded as the buyer or receiver of the order and that is known/registered at Modexpress as a business relation with an address. The party is indicated by means of an Id assigned by Modexpress. These types of parties must have been registered in advance with Modexpress, and no address can be indicated in the order.
The Id can only be used for parties of type BuyerId or ReceiverId.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExternalId" type="tns:OText35" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A party involved with the order that is identified with an Id used by the ordering party/sender.

For type BuyerId it is possible to indicate parties with an ExternalId if they are registered as a Modexpress business relation with an address (receiver address).
These types of parties must have been registered in advance with Modexpress, and no address can be included in the order.

For %Address types the ExterneId can be included as a reference in the order. For these parties, the applicable address must also be specified in the order.
In case of a DropSiteAddress the ExternalId can be used for the pickuppoint-id/number.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VatNumber" type="tns:Text17" minOccurs="0">
				<xs:annotation>
					<xs:documentation> Value added tax identification number. Mandatory for all EU and GB based Business parties.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EoriNumber" type="tns:Text17" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Economic Operators Registration and Identification number. Mandatory for all EU and GB based Business parties.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Name1" type="tns:Text50" minOccurs="1">
				<xs:annotation>
					<xs:documentation>The name of the party.
Order of display on documents: line 1

Only applicable for the %Address party types.
Mandatory for the %Address party types.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Name2" type="tns:OText50" minOccurs="0">
				<xs:annotation>
					<xs:documentation>'The parties ‘For attention of’.
Order of display on documents: line 2

Only applicable for the %Address party types.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AddressLine1" type="tns:Text50" minOccurs="1">
				<xs:annotation>
					<xs:documentation>The street that applies to the party.
Order of display on documents: line 4

Only applicable for the %Address party types.
Mandatory for the %Address party types.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AddressLine2" type="tns:OText50" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A free/extra text line for the party that is part of the address.
Order of display on documents: line 5

Only applicable for the %Address party types.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HouseNumber" type="tns:ONum6" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The house number that applies to the party.
Order of display on documents: line 4

Only applicable for the %Address party types.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HouseNumberExtension" type="tns:OText10" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The house number addition that applies to the party.
Order of display on documents: line 4

Only applicable for the %Address party types.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DeliveryInstruction" type="tns:OText30" minOccurs="0">
				<xs:annotation>
					<xs:documentation>An instruction for the delivery. 
Order of display on documents: line 3

Only applicable for the %Address party types.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PostalCode" type="tns:OText20" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The postal code / ZIP code that applies to the party.
Order of display on documents: line 6

Only applicable for the %Address party types.

Mandatory for parties with Country = NL.
</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="City" type="tns:Text50" minOccurs="1">
				<xs:annotation>
					<xs:documentation>The town/city that applies to the party.
Order of display on documents: line 6

Only applicable for the %Address party types.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Region" type="tns:OText35" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The province/region/state that applies to the party.
Order of display on documents: line 7

Only applicable for the %Address party types.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Country" type="tns:Text2" minOccurs="1">
				<xs:annotation>
					<xs:documentation>The country that applies to the party. The designation should be made according to iso2 code.
Order of display on documents: line 8 (country name will be displayed)

Mandatory for the %Address party types.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EmailAddress" type="tns:OText254" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The email address for the party.
Only applicable for the %Address party types.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PhoneNumber" type="tns:OText40" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The fixed line telephone number for the party.
Only applicable for the %Address party types.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MobileNumber" type="tns:OText40" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The mobile phone number for the party.
Only applicable for the %Address party types.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LanguageCode" type="tns:LanguageCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The language of the documents to be included with the shipment (packing slip). ISO 639-2 codes are used.
Only applicable for the %Address party types.

If multiple addresses are indicated, the LanguageCode to be used is:
1) DropSiteAddress, if address not specified or no language code specified, then
2) ReceiverAddress, if address not specified or no language code specified, then
3) BuyerAddress, if address not specified or no language code specified, then
4) InvoiceAddress, if address not specified or no language code specified, then
5) Last address mentioned in the Order.Party, if no language code specified, then
6) By default the language code is NLD</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Instructions">
		<xs:sequence>
			<xs:element name="Instruction" type="tns:Instruction" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>An individual instruction with the order.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Instruction">
		<xs:sequence>
			<xs:element name="Type" type="tns:Text10">
				<xs:annotation>
					<xs:documentation>Indication of the type of instruction:
- VAS; control of VAS
- HANDLING; instruction that is used in the execution of activities
- FILE; indication that a separate file is supplied with the order, containing documents to be printed for the shipment
- TEXT; print instructions for the packing slip of the e-commerce platform
- COVERPRT; instruction used to steer package cover print.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SequenceNumber" type="tns:Num3">
				<xs:annotation>
					<xs:documentation>The execution sequence number of the instruction. This can be used to send the sequence in which the instructions should be implemented.
The number must be unique among all the order instructions.

This field is not used for Instructiontype FILE</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Code" type="tns:OText10" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indication of the instruction by means of a code.
- In case of VAS an example code is 10 (= remove price label FP/GOH).
- In case of VAS the code 'COD' is used to indicate a Cash On Delivery form has to be printed (also necessary OrderLine/Price type 'Sale' and if necessary Order/FinInfo type 'CodSurcharge')
- In case of HANDLING the specific codes in use are SOURCE, PICK, CONTENTLBL and PACKINGSLP(630)
- In case of FILE the specific codes in use are PRICELABEL, INVOICE, THXNOTE, EXTDOC
- In case of TEXT the specific codes in use are VATNUMBER, EORINUMBER, RECVVAT, RECEORI, COCNUMBER, CEONAME, CUSTOMERID (in case of export to countries outside the EU, VATNUMBER must be specified), EXTCUSTREF(642) , SALESOFF(643), ORDERDESC(644), GLNNUMBER(645), BANKNAME(646), BICNUMBER(647), IBANNUMBER(648), PACKAGING (4)  
- In case of COVERPRT specific code in use are: TYNOTE (), TEMPLATE ()

If no specific code and no description is relevant than the instruction type must also be declared as instruction code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Description" type="tns:OText156" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indication of the instruction by means of a description.

An example description is 'packaging shipment in red wrapping paper'.

If no specific description is relevant than the instruction code must be declared.

This field is not used for Instructiontype FILE</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Info" type="tns:OText70" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The info to be used/printed:
- In case of type HANDLING with code SOURCE, the name of the webshop must be mentioned (source of the order) to indicate source specific handling for the order.
- In case of type HANDLING with code PICK the pick strategy must be given:
    - STYLE, STYLECOLOUR or STYLECOLOURSIZE
- In case of type FILE with code PRICELABEL, INVOICE or THXNOTE the name of the supplied file must be mentioned, including the extension of the file. Not used for EXTDOC.
- In Case of type TEXT with code VATNUMBER, EORINUMBER, RECVVAT, RECEORI,  COCNUMBER, CEONAME or CUSTOMERID (consumer DHL post number) the text (number or name) to be printed must be mentioned.
- In case of type COVERPRT and code
    - TYNOTE, allows up to 70 characters of text for personalization. Multiple instructions of this type can be provided, and the SequenceNumber determines the order of text printed line by line.
    - TEMPLATE, requires a predefined template code (codes provided by Modexpress). </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OrderLines">
		<xs:sequence>
			<xs:element name="OrderLine" type="tns:OrderLine" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>A line of the order A line specifies the goods that must be delivered for a particular article.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OrderLine">
		<xs:sequence>
			<xs:element name="Id" type="tns:Text50">
				<xs:annotation>
					<xs:documentation>The identification that the ordering party uses for the order line.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineReference" type="tns:OText10" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The reference that the ordering party uses for the order line.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Quantity" type="tns:Num6">
				<xs:annotation>
					<xs:documentation>The number of items of the article to be delivered.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StockType" type="tns:OText10" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Designation of the type of stock that must be delivered. Using the stock type, it is possible to differentiate according to different types of stock that must be maintained separately for an article (both in the operation and administratively).

The standaard stock types are (other types are possible):
- RGL - regular or A-choice stock
- RGLRJC - regular reject or B-choice stock

If no StockType is indicated the delivery is assumed to be regular stock (RGL).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AlternativeDescription" type="tns:OText60" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Description of the article to be displayed on the packing slip. 
This description is the alternative to the description registered in the SKU data.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OrderReference" type="tns:OText10" minOccurs="0"/>
			<xs:element name="ClientReference" type="tns:OText10" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference used by the buyer/recipient for the order line.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BackorderIndication" type="tns:Indication" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indication whether it is permissible to take an order in backorder. This is particularly relevant if insufficient stock can be reserved for the order line.
The handling is also dependent on 'PartialDelivery' on order level. It is possible to take a part of an orderline into backorder.

Standard value = YES (on line level).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Article" type="tns:ArticleSHP">
				<xs:annotation>
					<xs:documentation>Designation of the article to be delivered.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Owner" type="tns:Relation"/>
			<xs:element name="Instructions" type="tns:LineInstructions" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The instructions that apply to the orderline (for example VAS - Value Added Services).
This can involve packing instructions, the control of VAS or texts to be printed on the shipment documents.
An instruction is indicated by either a code or description.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Prices" type="tns:Prices" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The prices that apply for the SKU of the orderline</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="LineInstructions">
		<xs:sequence>
			<xs:element name="Instruction" type="tns:LineInstruction" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>An individual instruction with the orderline.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="LineInstruction">
		<xs:sequence>
			<xs:element name="Type" type="tns:Text10">
				<xs:annotation>
					<xs:documentation>Designation of the instruction type:
- VAS; control of VAS</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SequenceNumber" type="tns:Num3">
				<xs:annotation>
					<xs:documentation>The execution sequence number of the instruction. This can be used to send the sequence in which the instructions should be implemented.
The number must be unique among all the orderline instructions.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Code" type="tns:OText10" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indication of the instruction by means of a code.
Only applicable for type VAS

If no specific code and no description is relevant than the instruction type must also be declared as instruction code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Description" type="tns:OText70" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indication of the instruction by means of a description.

In case of type PACKAGING (example) an example description is 'packaging item in red wrapping paper'.

If no specific description is relevant than the instruction code must be declared.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Info" type="tns:OText70" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The info to be printed.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Prices">
		<xs:sequence>
			<xs:element name="Price" type="tns:Price" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>A price that applies to the SKU of the orderline.
The indicated price for the SKU in a orderline overrides the comparable price in the SKU data.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Price">
		<xs:sequence>
			<xs:element name="Type" type="tns:Text15">
				<xs:annotation>
					<xs:documentation>The indication of a price that is relevant for the SKU:
 - Type 'Exportvalue' is used for the exportinvoice.
 - Type 'Purchase' is used to be the purchase price.
 - Type 'Sale' is meant to be the price to pay. 
      (In case of customs declaration this type will also be used)
 - Type 'From' is meant te be the original sale price (from price).

In case of the Zalando (e-commerce platform) packing slip, the 'Sale' price must be indicated; in this case the Amount, CurrencyCode, VATCode and VATPercentage must be indicated.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Amount" type="tns:Num9.2">
				<xs:annotation>
					<xs:documentation>The amount indicating the price (regarding 1 single unit of the SKU).
(N9,2 = Up to 7 digits before the comma and 2 decimals)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrencyCode" type="tns:Text3">
				<xs:annotation>
					<xs:documentation>Code indicating the currency in which the price is expressed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Country" type="tns:OText2" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Code indicating the country for which the price is valid.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Region" type="tns:OText25" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Code indicating the region for which the price is valid (for example: EU)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VATCode" type="tns:VATCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Code that indicates whether the amount is including (I) or excluding (E) VAT.
For customs usage the amount is exclusive of VAT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VATPercentage" type="tns:Num5.2" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The VAT percentage that applies to the amount.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
