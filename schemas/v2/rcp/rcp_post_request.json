{
  "type": "object",
  "properties": {
    "SenderRelationId": {
      "description": "Identification of the party that submits the receipt message.",
      "type": "string",
      "maxLength": 40
    },
    "OrderingPartyRelationId": {
      "description": "Identification of the party on whose behalf the articles have to be received.",
      "type": "string",
      "maxLength": 40
    },
    "Order": {
      "description": "An order to receive goods (stock). A receipt consists of two parts that can be registered simultaneously or separately:\n- Purchase/return order (PO/RMA); the order from the ordering party to receive goods; these are goods that the ordering party has purchased from suppliers or is taking back as returns from buyers/recipients.\n- Shipment; a shipment to be supplied by a supplier or buyer/recipient for a purchase/return order.\n- By default it is assumed that the purchase/return order and the shipment are the same. This means that it is sufficient to specify the purchase/return order without specifying shipments. The submitted purchase/return order is automatically regarded as the shipment to be received (in terms of the contents, the shipment is the same as the purchase/return order).\n",
      "type": "object",
      "properties": {
        "Id": {
          "description": "The identification that the ordering party uses for the order. Based on this identification, Modexpress checks whether the registered order already exists for the ordering party.\nCancelled orders or executed orders on which nothing has been received, are not taken into consideration. If an order already exists, the registration is rejected.\\r\\n\\r\\nIf purchase/return orders and shipments are registered separately, this identification is used to link the shipment to a purchase/return order that was reported earlier.\n",
          "type": "string",
          "minLength": 1,
          "maxLength": 25
        },
        "PurchaseOrder": {
          "type": "object",
          "properties": {
            "Type": {
              "description": "Designation of the order type. Only the types indicated by Modexpress are permitted.\nType XDOCKLOT can only be used if this has been agreed upon. For return orders there also can be automatic return orders.\nThese are created automatically on the basis of executed shipments and are therefore not submitted by means of this message\nbut will be reported back as such using the RCP-exec message.\n",
              "type": "string",
              "maxLength": 20,
              "enum": [
                "PURCHASE",
                "RETURN",
                "XDOCKLOT"
              ]
            },
            "Subtype": {
              "description": "A subdivision of the order type. For example `RETAIL` returns versus `WHOLESALE` returns. Only types coordinated with Modexpress are permitted.\n",
              "type": "string",
              "maxLength": 20,
              "enum": [
                "RETAIL",
                "WHOLESALE"
              ]
            },
            "Reference": {
              "description": "Reference for the order used by the ordering party.",
              "type": "string",
              "maxLength": 20
            },
            "SenderInternalId": {
              "description": "Identification of the party that delivers the goods for the order. The party must be known to Modexpress by the relevant Id. \n**Note**: Id assigned by Modexpress\n",
              "type": "integer",
              "minimum": 1,
              "maximum": 9999999
            },
            "SenderExternalId": {
              "description": "Identification of the party that delivers the goods for the order. The party is not known to Modexpress by the relevant Id.",
              "type": "string",
              "maxLength": 20
            },
            "SenderName": {
              "type": "string",
              "title": "Name/description of the party that delivers the goods for the order.",
              "maxLength": 70
            },
            "Date": {
              "description": "Date that the ordering party uses for the order. For example, this can be the date on which the order was created by the ordering party.\nThis date is reported back in the execution result of the order. This date can be used to make the order recognisable.\n\nFor example, if the ordering party has any questions concerning the status of the order and that order cannot be identified by means of a unique id.\n",
              "type": "string",
              "format": "date"
            },
            "MRN": {
              "description": "Inbound Movement Reference Number(MRN) if applicable and known at the time of sending the RCP message.\nThis reference is assigned by the customs authorities and it uniquely identifies any movement going in our out of the EU.\n",
              "type": "string",
              "minLength": 18,
              "maxLength": 18
            },
            "BondedAdministration": {
              "description": "Inbound in Bonded Warehouse administration\nCustomer can opt for bonded warehouse administration for goods provinient from outside the EU (for goods from inside the EU community this field is no relevant). \nY - Received goods are taken into the bonded warehouse administration (default for Bonded enabled customers) \nN - Received goods will be directly cleared into EU by arrival at Modexpress.\n\nOnly applicable for Customs enabled Customers.\n",
              "type": "string",
              "maxLength": 1,
              "enum": [
                "Y",
                "N"
              ]
            },
            "Parties": {
              "type": "object",
              "properties": {
                "Party": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Type": {
                        "description": "Designation of a party/address that applies to the order:\n - SellerAddress; the shipper/seller of the shipment\n - ExporterAddress; the exporter of the shipment (not necessarily the seller)\n (when ExportAddress is not provided SellerAddress is used as ExporterAddress)\n\n Mandatory for Customs enabled Customers.\n \"ShipperAddress\" has been replaced with \"SellerAddress\" in this version of the RCP message. \n",
                        "type": "string",
                        "maxLength": 20,
                        "enum": [
                          "SellerAddress",
                          "ExporterAddress"
                        ]
                      },
                      "ExternalId": {
                        "description": "The Id that is used as the identification of the party/address.",
                        "type": "string",
                        "maxLength": 35
                      },
                      "EORI": {
                        "description": "Supplier EORI number is mandatory for suppliers from EU, for non-EU suppliers with an invoice statement then is EORI also mandatory, however this will not be validated in the RCP message.  \n",
                        "type": "string",
                        "maxLength": 25
                      },
                      "Name1": {
                        "description": "The name of the party.",
                        "type": "string",
                        "maxLength": 80
                      },
                      "Name2": {
                        "description": "The parties 'For attention of'.",
                        "type": "string",
                        "maxLength": 55
                      },
                      "AddressLine1": {
                        "description": "The street that applies to the party.",
                        "type": "string",
                        "maxLength": 50
                      },
                      "HouseNumber": {
                        "description": "The house number that applies to the party.",
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 999999
                      },
                      "HouseNumberExtension": {
                        "description": "The house number addition that applies to the party.",
                        "type": "string",
                        "maxLength": 10
                      },
                      "PostalCode": {
                        "description": "The postal code / ZIP code that applies to the party.",
                        "type": "string",
                        "maxLength": 20
                      },
                      "City": {
                        "description": "The town/city that applies to the party.",
                        "type": "string",
                        "maxLength": 40
                      },
                      "Country": {
                        "type": "string",
                        "description": "ISO 3166 ALPHA-2 country code. The country that applies to the party. \nThe designation should be made according to iso2 code. Order of display on documents: line 8 (country name will be displayed). \nMandatory for the %Address party types.\n",
                        "minLength": 2,
                        "maxLength": 2
                      }
                    },
                    "required": [
                      "Type",
                      "ExternalId"
                    ]
                  }
                }
              }
            },
            "Instructions": {
              "type": "object",
              "properties": {
                "Instruction": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "SequenceNumber": {
                        "description": "A sequence number indicating the order of execution of the instruction.",
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 999999
                      },
                      "Code": {
                        "description": "Indication of the instruction by means of a code.",
                        "type": "string",
                        "maxLength": 10
                      },
                      "Description": {
                        "description": "Indication of the instruction by means of a description.",
                        "type": "string",
                        "maxLength": 70
                      }
                    }
                  }
                }
              }
            },
            "CertificateInfo": {
              "type": "object",
              "properties": {
                "Certificate": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "CertificateType": {
                        "description": "Indication of the type of Certificate  information\n - Type 'EUR.1' certificate\nA EUR.1 certificate is only used for goods of preferential origin. \nTo get a discount or exemption on import duties when imported from a contracting country, ask your supplier to enclose a EUR.1 certificate with the shipment.\n\n - Type 'EUR-MED'\nA EUR-MED certificate is a variant of the EUR.1 and is only valid if you trade with countries where the Pan-Euro-Mediterranean Agreement applies. \nThis agreement makes it possible for raw materials and products of preferential origin from these countries to count towards the determination of origin (so-called cumulation). \nYou use a EUR-MED instead of a EUR.1 and offers more options for re-export to another partner country within this country group.\n\n - Type 'ATR'\nAn ATR certificate is a customs document that you can use for trade between countries from the EU and Turkey. \nThe EU forms a customs union with Turkey, so you can import goods from Turkey without import duties. \nOrigin means that the product was produced in Turkey or was previously imported into Turkey from another country. \nThe Turkish origin is recorded in the ATR certificate. Your Turkish supplier requests the certificate from Turkish customs.\n\n - Type 'CVO'\nA Certificate of Origin (CVO) is proof of the origin of a product. \nA CVO contains the description and origin of your products, and the name and address details of the seller and buyer. \nIn the Netherlands, the Chamber of Commerce confirms the origin on CVOs with a digital stamp and signature.\n\nUp to 2 certificates can apply to the same ShipmentLine, the following combinations are possible:\n- EUR.1 + CVO\n- ATR + CVO\n- EUR-MED + CVO\n",
                        "type": "string",
                        "maxLength": 10,
                        "enum": [
                          "EUR.1",
                          "EUR-MED",
                          "ATR",
                          "CVO"
                        ]
                      },
                      "CertificateNumber": {
                        "description": "Certificate number/identification.",
                        "type": "string",
                        "maxLength": 10
                      },
                      "Docdata": {
                        "description": "Base64 encoded PDF document.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "PurchaseOrderLines": {
              "type": "object",
              "properties": {
                "PurchaseOrderLine": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Id": {
                        "description": "The identification that the ordering party uses for the order line (unique in the PurchaseOrder). ",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 250
                      },
                      "Quantity": {
                        "description": "The number of items of the article that must be received.",
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 999999999
                      },
                      "Reference": {
                        "description": "The reference the ordering party uses for the order line and that the ordering party can use to recognise the line.",
                        "type": "string",
                        "maxLength": 10
                      },
                      "StockType": {
                        "description": "Designation of the type of stock that must be received. By stock type, it is possible to differentiate into different types of stock to be kept separately for an article (both in the operation and administratively).\nThe standaard stock types are (other types are possible):\n- RGL: regular or A-choice stock\n- RGLRJC: regular reject or B-choice stock\n\nIf no StockType is indicated the receipt is assumed to be regular stock (RGL). Other types assigned by Modexpress.\n",
                        "type": "string",
                        "maxLength": 10
                      },
                      "Instructions": {
                        "type": "object",
                        "properties": {
                          "Instruction": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "SequenceNumber": {
                                  "description": "A sequence number indicating the order of execution of the instruction.",
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 999
                                },
                                "Code": {
                                  "description": "Indication of the instruction by means of a code.",
                                  "type": "string",
                                  "maxLength": 10
                                },
                                "Description": {
                                  "description": "Indication of the instruction by means of a description.",
                                  "type": "string",
                                  "maxLength": 70
                                }
                              }
                            }
                          }
                        }
                      },
                      "Article": {
                        "type": "object",
                        "properties": {
                          "Id": {
                            "description": "The identification that the owner uses for the SKU to be received. This is usually a logical Id. Many owners use the combination of STYLE+COLOUR+SIZE as a logical Id. WMS A24",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 250
                          }
                        },
                        "required": [
                          "Id"
                        ]
                      },
                      "Owner": {
                        "type": "object",
                        "properties": {
                          "RelationId": {
                            "description": "Identification of the party that is the owner of the article to be received. Id assigned by Modexpress",
                            "type": "string",
                            "maxLength": 40
                          },
                          "RelationType": {
                            "description": "Indication whether the Relation_Id is an internal or external id.\n- internal id: the id assigned and used by Modexpress\n- external id: the id assigned and used by the ordering party.\n",
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 3,
                            "enum": [
                              "EXT",
                              "INT"
                            ]
                          }
                        }
                      }
                    },
                    "required": [
                      "Id",
                      "Quantity",
                      "Article"
                    ]
                  }
                }
              }
            }
          },
          "required": [
            "Type",
            "PurchaseOrderLines"
          ]
        },
        "Shipment": {
          "description": "The registration of a shipment to be supplied for a purchase/return order by a supplier or buyer/recipient. There are four possibilities:\n1. the shipment(s) for a purchase order from an ordering party is/are provided separately by the supplier (not yet implemented)\n2. the shipment(s) for a purchase order is/are provided by the ordering party itself together with the purchase order\n3. the shipment(s) for a purchase order is/are provided by the ordering party itself separately from the purchase order (not yet implemented)\n4. no shipment(s) are provided for a purchase order, each purchase order automatically results in a corresponding shipment that is the same as the purchase order in terms of its contents.\n\nPay attention; a combination of 2 and 4 is not possible. So, if ShipmentLines are provided for the PurchaseOrderLines, it is necessary that every PurchaseOrderLine has a ShipmentLine and the Quantity in both lines has to be the same.\nWhen a shipment is provided separately, a reference to the purchase/return order is required; this is done using the 'id' of the order. Moreover, the purchase/return order must then be registered/provided before the shipment is registered/provided.\"\n",
          "type": "object",
          "properties": {
            "Reference": {
              "description": "Reference used by the supplier for the shipment.",
              "type": "string",
              "maxLength": 25
            },
            "Type": {
              "description": "Designation of the order type. Only the types indicated by Modexpress are permitted.",
              "type": "string",
              "maxLength": 20,
              "enum": [
                "STANDARD",
                "PREORDER",
                "REORDER"
              ]
            },
            "ArrivalDateTime": {
              "description": "The delivery date/time of the shipment expected by the supplier at Modexpress.",
              "type": "string",
              "format": "date-time"
            },
            "Carrier": {
              "description": "The identification of the shipper that will deliver the shipment",
              "type": "string",
              "maxLength": 70
            },
            "CarrierInfo": {
              "description": "Information about the shipper that will deliver the shipment, for example contact data.",
              "type": "string",
              "maxLength": 70
            },
            "CountryOfDeparture": {
              "description": "The country of origin of the shipment (Country of departure). Use an ISO-2 country code.",
              "type": "string",
              "minLength": 2,
              "maxLength": 2
            },
            "IncoTerm": {
              "description": "A pre-defined commercial term published by the International Chamber of Commerce (ICC) relating to international commercial law. The Incoterms rules are intended primarily to clearly communicate the tasks, costs, and risks associated with the transportation and delivery of goods.\n\nEXW - Ex Works\nFCA - Free Carrier\nFAS - Free Alongside Ship (only allowed for Sea MeansOfTransportBorder)\nFOB - Free on Board  (only allowed for Sea MeansOfTransportBorder)\nCPT - Carriage Paid To\nCIP - Carriage and Insurance Paid To\nCFR - Cost and Freight  (only allowed for Sea MeansOfTransportBorder)\nCIF - Cost Insurance and Freight  (only allowed for Sea MeansOfTransportBorder)\nDAP - Delivered At Place\nDPU - Delivered at Place Unloaded\nDDP - Delivered Duty Paid\n\n2010 and 2020 Incoterms, older incoterms not supported anymore.\nMandatory for Customs enabled Customers and when CountryOfDeparture = (outside EU)                      \ntype: string\n",
              "minLength": 3,
              "maxLength": 3,
              "enum": "-EXW -FCA -FAS -FOB -CPT -CIP -CFR -CIF -DAP -DPU -DDP"
            },
            "IncoTermPlace": {
              "description": "The agreed place of delivery/destination.\nMandatory for Customs enabled Customers and when CountryOfDeparture = (outside EU) \n",
              "type": "string",
              "maxLength": 50
            },
            "IncoTermCountry": {
              "description": "The agreed Country of delivery/destination.\nMandatory for Customs enabled Customers and when CountryOfDeparture = (outside EU) \nUse an ISO-2 country code. \n",
              "type": "string",
              "minLength": 2,
              "maxLength": 2
            },
            "FreightReference": {
              "description": "An unique delivery number/reference for the customs declaration of the shipment.\nMandatory for Customs enabled Customers\n",
              "type": "string",
              "maxLength": 22
            },
            "MeansOfTransportBorder": {
              "description": "Means of transport at border. Note: Until further notice this will be added manually by MX personnel in each import declaration. Code A27 list\n1 - Sea\n2 - Train\n3 - Road\n4 - Air\nMandatory for Customs enabled Customers.\n",
              "type": "integer",
              "minimum": 1,
              "maximum": 4
            },
            "TransportArrivalLicencePlate": {
              "description": "Transport identification by means of Licence Plate.\n",
              "type": "string",
              "maxLength": 25
            },
            "Containers": {
              "description": "Containers information\nOnly applicable for Customs enabled Customers\nNeeded for Full Container Load (FCL)\nAn inbound shipment cannot be spread over multiple containers (MX requirement), therefore only one container can be stated. This might change in the future\n",
              "type": "object",
              "properties": {
                "Container": {
                  "description": "Container information",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "SequenceNumber": {
                        "description": "Sequence number\n",
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 999
                      },
                      "ContainerNumber": {
                        "description": "Container number identification\n",
                        "type": "string",
                        "maxLength": 17
                      },
                      "SealNumber1": {
                        "type": "string",
                        "description": "Seal number identification",
                        "maxLength": 17
                      },
                      "SealNumber2": {
                        "type": "string",
                        "description": "Additional seal number identification",
                        "maxLength": 17
                      }
                    },
                    "required": [
                      "ContainerNumber",
                      "SealNumber1"
                    ]
                  }
                }
              }
            },
            "ShipmentPackages": {
              "type": "object",
              "description": "ShipmentPackages composition. Mandatory for Customs enabled customers.",
              "properties": {
                "ShipmentPackage": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Type": {
                        "description": "Indication of the type of packages. \n\nCT - Cardboard box\nOH - Euro pallet\nED - Pallet box\nOC - Chep pallet\nPP - Pieces\n\nPP should only be used to denote Hanging Goods.\nOther types may be added at a later stage. \n",
                        "type": "string",
                        "maxLength": 10,
                        "enum": [
                          "CT",
                          "OH",
                          "ED",
                          "OC",
                          "PP"
                        ]
                      },
                      "Quantity": {
                        "description": "Amount of packages\n",
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 999999999
                      }
                    },
                    "required": [
                      "Type",
                      "Quantity"
                    ]
                  }
                }
              }
            },
            "TransportDocuments": {
              "type": "object",
              "properties": {
                "TransportDocument": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Type": {
                        "description": "Indication of the type of documents.\n\n- PL: PackingList -> N721\n- BL: BillOfLading (Sea)->N705\n- AWB: AirWayBill (Air)->N740\n- CMR: Convention relative au Contrat de Transport International de Marchandises par Route (Road)->N730\n- CIM: Contrat de Transport International ferroviaire des Marchandises (Rail) -> N720\n- HWB: House(air)WayBill (in case of consolidation, Master (Air)Way Bill is applicable) -> N703\n\nBL, AWB,  CIM or HWB is mandatory for Sea, Air and Rail transport modes + PL for inbound shipments coming from abroad (outside NL)\n",
                        "type": "string",
                        "maxLength": 30,
                        "enum": [
                          "PL",
                          "BL",
                          "AWB",
                          "CMR",
                          "CIM",
                          "HWB"
                        ]
                      },
                      "Identification": {
                        "description": "Document identification\n",
                        "type": "string",
                        "maxLength": 50
                      },
                      "Docdata": {
                        "type": "string",
                        "description": "Base64 encoded PDF document"
                      }
                    },
                    "required": [
                      "Type",
                      "Identification",
                      "Docdata"
                    ]
                  }
                }
              }
            },
            "AdditionalFinInfo": {
              "type": "object",
              "properties": {
                "FinInfo": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "InfoType": {
                        "description": "Indication of the type of financial information:\n- Type 'Invoice' is used for customs declaration\n- Type 'Freightcost' is used for customs declaration\n- Type 'Insurancecost' is used for customs declaration\n",
                        "type": "string",
                        "maxLength": 15,
                        "enum": [
                          "Invoice",
                          "Freightcost",
                          "Insurancecost"
                        ]
                      },
                      "Description": {
                        "description": "A relevant description for the type of financial information. In case of type 'Invoice', this concerns the invoice number (for customs declaration, the invoice number is limited to format A35).\n",
                        "type": "string",
                        "maxLength": 50
                      },
                      "InvoiceId": {
                        "type": "string",
                        "description": "The ID of the invoice"
                      },
                      "Date": {
                        "description": "A relevant date for the type of financial information. In case of 'Invoice', this concerns the invoice date.\n",
                        "type": "string",
                        "format": "date"
                      },
                      "Amount": {
                        "description": "The amount that applies to the type of financial information (so the invoice amount, the freight cost, the insurance cost).\n",
                        "type": "number",
                        "format": "double",
                        "minimum": -1.7976931348623157e+308,
                        "maximum": 1.7976931348623157e+308
                      },
                      "CurrencyCode": {
                        "type": "string",
                        "description": "ISO-4217 Code indicating the currency in which the amount is expressed.",
                        "minLength": 3,
                        "maxLength": 3
                      },
                      "Docdata": {
                        "type": "string",
                        "description": "Base64 encoded PDF document, relevant for InfoType=Invoice"
                      }
                    },
                    "required": [
                      "InfoType"
                    ],
                    "InvoiceStatementInfo": {
                      "type": "array",
                      "description": "Invoice Statement information, if applicable in case of InfoType=Invoice",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Type": {
                            "description": "Indication of the type of InvoiceStatement  information:\n - Type 'REX', Registered Exporter, \nWith the status of REX, an exporter can put a so-called 'certificate of origin' on its invoices. This gives importers a preference when importing products into the European Union. A certificate of origin is valid for 12 months.\nCompanies can see in a database of the European Union whether an exporter is REX. After registration as a REX, the authorities no longer issue a Form A certificate.\n\n\n - Type 'TE', Allowed Exporter\nFor companies that regularly export with a EUR.1 or EUR-MED document, who have a clear delivery program and have sufficient knowledge of import and export, there is the 'Toegelaten Exporteur' (TE) scheme. After an extensive application procedure, these exporters are granted an Authorized Exporter Self-Issuing Preferential Proofs of Origin license. From that moment on, they can use an invoice declaration instead of a EUR.1 or EUR-MED certificate. The license number is stated in this invoice declaration. The exporter can provide his sales invoice with this statement without the intervention of the Chamber of Commerce and present it to Dutch Customs in the country of destination. The function and responsibilities remain the same for all parties involved as for the use of EUR.1 or EUR-MED documents.\n\n - Type 'PREF-ORG', Preferential OriginStatement for other than REX or TE Exporter. \nIn case reduction of import duties is applicable. \nFor 'PREF-ORG' LicenceNumber is optional\n\nOnly one InvoiceStatement (if applicable) type is allowed per Shipment \n",
                            "type": "string",
                            "maxLength": 10,
                            "enum": [
                              "REX",
                              "TE-EUR1",
                              "TE-MED",
                              "PREF-ORG"
                            ]
                          },
                          "LicenceNumber": {
                            "type": "string",
                            "description": "InvoiceStatement Licence number\n\nMandatory in case of REX or TE-EUR1, TE-MED. \nFor PREF-ORG, if the value of the inbound invoice is above 6000,- euro then this field is mandatory. \n - For Canada a Business Number must be used \n - For Japan a Corporate Number must be used \n - For Singapore a Unique Entity Number must be used \n - For United Kingdom an (UK)EORI Number must be used \n - For Vietnam it's not allowed to use a PREF-ORG when the value of the Invoice is above 6000,- euro.  \n",
                            "maxLength": 40
                          },
                          "required": [
                            "Type"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "ShipmentLines": {
              "type": "object",
              "properties": {
                "ShipmentLine": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Id": {
                        "description": "Reference to the PurchaseOrderLine (Id) for which this shipment line indicates the delivery.",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 250
                      },
                      "Quantity": {
                        "description": "The number of items of the article that will be delivered.",
                        "type": "number",
                        "minimum": 1,
                        "maximum": 999999999
                      },
                      "CountryOfOrigin": {
                        "description": "The country of origin of the article to be delivered (country of production). Use an ISO-2 country code.\n",
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2
                      },
                      "Prepacked": {
                        "description": "Indication whether the delivered article, together with other articles, has been packed in secondary packaging (for example, size curve box) and must be removed from this packaging when it arrives.\n",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 1,
                        "enum": [
                          "Y",
                          "N"
                        ]
                      },
                      "LotNumber": {
                        "description": "The lot/batch number of the SKU to be received.\\r\\nIt is possible to have different types of stock for a SKU (attribute StockType). In addition, there may be a distinction between different lots/batches for the stock regarding a type (both in the operation and administratively).\n",
                        "type": "string",
                        "maxLength": 20
                      },
                      "GrossWeight": {
                        "description": "Gross Weight per ShipmentLine (in Kg)\n",
                        "type": "number",
                        "format": "double",
                        "minimum": -1.7976931348623157e+308,
                        "maximum": 1.7976931348623157e+308
                      },
                      "AdditionalLineFinInfo": {
                        "type": "object",
                        "properties": {
                          "LineFinInfo": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "InfoType": {
                                  "description": "Indication of the type of financial information:\n- Type 'Invoice' is used for customs declaration\n",
                                  "type": "string",
                                  "maxLength": 15,
                                  "enum": [
                                    "Invoice"
                                  ]
                                },
                                "Description": {
                                  "description": "A relevant description for the type of financial information.\nIn case of type 'Invoice', this concerns the invoice number (for customs declaration, the invoice number is limited to format 35 characters)\n",
                                  "type": "string",
                                  "maxLength": 50
                                },
                                "Date": {
                                  "description": "A relevant date for the type of financial information. In case of 'Invoice', this concerns the invoice date.\n",
                                  "type": "string",
                                  "format": "date"
                                },
                                "Amount": {
                                  "description": "The amount that applies to the type of financial information (so the invoice amount).",
                                  "type": "number",
                                  "format": "double",
                                  "minimum": -1.7976931348623157e+308,
                                  "maximum": 1.7976931348623157e+308
                                },
                                "CurrencyCode": {
                                  "type": "string",
                                  "description": "ISO-4217 Code indicating the currency in which the amount is expressed.",
                                  "minLength": 3,
                                  "maxLength": 3
                                }
                              },
                              "required": [
                                "InfoType"
                              ]
                            }
                          }
                        }
                      },
                      "Prices": {
                        "type": "object",
                        "properties": {
                          "Price": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "Type": {
                                  "description": "The indication of a price that is relevant for the SKU.",
                                  "type": "string",
                                  "maxLength": 15,
                                  "enum": [
                                    "Purchase",
                                    "Sale",
                                    "Custom"
                                  ]
                                },
                                "Amount": {
                                  "description": "The amount indicating the price (regarding 1 single unit of the SKU).\r\n(N9,2 = Up to 7 digits before the comma and 2 decimals)",
                                  "type": "number"
                                },
                                "CurrencyCode": {
                                  "type": "string",
                                  "description": "ISO-4217 Code indicating the currency in which the amount is expressed.",
                                  "minLength": 3,
                                  "maxLength": 3
                                },
                                "Country": {
                                  "description": "Code indicating the country for which the price is valid. Use ISO-2 country code.",
                                  "type": "string",
                                  "minLength": 2,
                                  "maxLength": 2
                                },
                                "Region": {
                                  "description": "Code indicating the region for which the price is valid (for example: EU)",
                                  "type": "string",
                                  "maxLength": 25
                                },
                                "VATCode": {
                                  "description": "Code that indicates whether the amount/price is including (I) or excluding (E) VAT.\r\nFor customs usage the prices are exclusive of VAT.",
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 1,
                                  "enum": [
                                    "I",
                                    "E"
                                  ]
                                }
                              },
                              "required": [
                                "Type",
                                "Amount",
                                "CurrencyCode"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "Quantity"
                    ]
                  }
                }
              }
            }
          },
          "required": [
            "Type"
          ]
        }
      },
      "required": [
        "Id",
        "PurchaseOrder"
      ]
    }
  },
  "required": [
    "Order"
  ],
  "$schema": "http://json-schema.org/draft-04/schema#"
}